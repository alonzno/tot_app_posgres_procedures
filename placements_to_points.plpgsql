<<top_block>>
DECLARE
	-- THESE ARE THE TYPES OF SCORING SPREADS, CHANGING THESE CHANGES SCORING MECHANICS
	TYPE_A integer[] := array[21,15,9,6, 4,2,1,1, 0,0,0,0, 0,0,0,0];
	TYPE_B integer[] := array[21,15,9,6, 2,0,0,0, 0,0,0,0, 0,0,0,0];
	TYPE_C integer[] := array[16,9,3,3,  0,0,0,0, 0,0,0,0, 0,0,0,0];
	TYPE_D integer[] := array[10,6,0,0,  0,0,0,0, 0,0,0,0, 0,0,0,0];
	TYPE_E integer[] := array[8,0,0,0,   0,0,0,0, 0,0,0,0, 0,0,0,0];
	
	-- TEMP VARIABLES
	event_id_param smallint := event_id;
	
	this_row_result placements;
	this_row_array varchar(255)[];
	
	this_score_spread score_spread;
	this_spread_array int[];
	
	this_point_array real[16];
	
	this_team_size smallint;
	this_tie_count smallint;
	this_score_sum smallint := 0;
	
	this_event_type event_type;
	
BEGIN
	-- GET ROW FROM PLACEMENTS
	SELECT * FROM placements INTO this_row_result WHERE placements.event_id = event_id_param;
	
	-- HANDLE ROW DOESN'T EXIST(EXIT IF DOESN'T)
	IF this_row_result IS NULL THEN
		RAISE EXCEPTION 'The following event does not exist in table placements: %', event_id_param;
	END IF;
	
	-- CONVERT ROW TO ARRAY
	this_row_array = array[this_row_result.place_id_0,
						    this_row_result.place_id_1,
						    this_row_result.place_id_2,
						    this_row_result.place_id_3,
						    this_row_result.place_id_4,
						    this_row_result.place_id_5,
						    this_row_result.place_id_6,
						    this_row_result.place_id_7,
						    this_row_result.place_id_8,
						    this_row_result.place_id_9,
						    this_row_result.place_id_10,
						    this_row_result.place_id_11,
						    this_row_result.place_id_12,
						    this_row_result.place_id_13,
						    this_row_result.place_id_14,
						    this_row_result.place_id_15]; 
	
	--	GET SCORE SPREAD ENUM OF EVENT
	SELECT score_spread FROM events INTO this_score_spread WHERE events.id = event_id_param;
	
	-- CONVERT SCORE SPREAD ENUM TO ARRAY
	CASE this_score_spread
		WHEN 'TYPE_A' THEN 
			this_spread_array = TYPE_A;
		WHEN 'TYPE_B' THEN 
			this_spread_array = TYPE_B;
		WHEN 'TYPE_C' THEN 
			this_spread_array = TYPE_C;
		WHEN 'TYPE_D' THEN 
			this_spread_array = TYPE_D;
		WHEN 'TYPE_E' THEN 
			this_spread_array = TYPE_E;
		ELSE
			RAISE EXCEPTION 'Not a valid score spread: %', this_score_spread;
	END CASE;
	
	-- GET TEAM SIZE
	SELECT team_size FROM events INTO this_team_size WHERE events.id = event_id_param;
	--	GET EVENT TYPE
	SELECT event_type FROM events INTO this_event_type WHERE events.id = event_id_param;
	
	-- HANDLE SCORING MAX, MIN EVENTS
	IF this_event_type = 'MAX' OR this_event_type = 'MIN' THEN
		-- Fill point array
		FOR i IN 1..16 LOOP
			-- GET COUNT
			this_tie_count = array_length(array_positions(this_row_array, this_row_array[i]), 1) / this_team_size;
			
			FOR j IN 0..(this_tie_count - 1) LOOP
				this_score_sum = this_score_sum + this_spread_array[CAST (this_row_array[i] AS integer) + j];
			END LOOP;
			
			this_point_array[i] = this_score_sum::real / this_tie_count::real;
			this_score_sum = 0;
		END LOOP;
		
	-- HANDLE SCORING BRACKET, TOP EVENTS
	ELSE
		FOR i IN 1..16 LOOP
			this_point_array[i] = this_spread_array[CAST (this_row_array[i] AS integer)];
		END LOOP;
	END IF;
	
	-- UPDATE POINTS
	UPDATE points SET
		points_id_0  = this_point_array[1],
		points_id_1  = this_point_array[2],
		points_id_2  = this_point_array[3],
		points_id_3  = this_point_array[4],
		points_id_4  = this_point_array[5],
		points_id_5  = this_point_array[6],
		points_id_6  = this_point_array[7],
		points_id_7  = this_point_array[8],
		points_id_8  = this_point_array[9],
		points_id_9  = this_point_array[10],
		points_id_10 = this_point_array[11],
		points_id_11 = this_point_array[12],
		points_id_12 = this_point_array[13],
		points_id_13 = this_point_array[14],
		points_id_14 = this_point_array[15],
		points_id_15 = this_point_array[16]
	WHERE
		points.event_id = event_id_param;
	
	-- DEBUG / REMOVE
	RAISE NOTICE '% % % % % %', this_row_array, this_spread_array, this_point_array, this_event_type, this_tie_count, this_team_size;
END top_block;
